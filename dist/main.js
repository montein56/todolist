(()=>{"use strict";var n={341:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n:root {\n    --hover: #b0438a;\n    --shadow: #5ca3b4;\n    --form: #005f73;\n    --formBorder: #001219;\n    --button: #eee8aa;\n    --btnBGC: #24a0ed;\n}\n\nhtml {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 14px;\n    opacity: 0.9;\n    background-image: radial-gradient(circle at center center, #3755b8, #4fc8c8),\n        repeating-radial-gradient(\n            circle at center center,\n            #3755b8,\n            #3755b8,\n            8px,\n            transparent 16px,\n            transparent 8px\n        );\n    background-blend-mode: multiply;\n}\n\n#content {\n    padding: 0;\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: auto 1fr auto;\n    background-color: #a5dbe6;\n}\n\n#header {\n    color: var(--button);\n    background-color: var(--form);\n    text-align: center;\n    padding: 3vh 0;\n}\n#main {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10vh;\n}\n.card {\n    border: solid var(--hover) 1px;\n    padding: 1vw;\n    background-color: #93cdda;\n}\n.card:nth-child(2n + 1) {\n    background-color: var(--shadow);\n}\n.card div {\n    display: flex;\n    justify-content: space-between;\n    font-size: 3.5vw;\n}\n.card div:nth-child(4) {\n    justify-content: space-evenly;\n}\n.title {\n    font-weight: bolder;\n    padding-bottom: 2vh;\n}\n.project {\n    padding-bottom: 3vw;\n}\n.high {\n    border-right: 7vw solid #ff595e;\n    border-top-right-radius: 8%;\n    border-bottom-right-radius: 8%;\n\n    /* border-radius: 8%; */\n}\n.medium {\n    border-right: 7vw solid #fcf6bd;\n    border-top-right-radius: 8%;\n    border-bottom-right-radius: 8%;\n    /* border-radius: 8%; */\n}\n.low {\n    border-right: 7vw solid #52b788;\n    border-top-right-radius: 8%;\n    border-bottom-right-radius: 8%;\n    /* border-radius: 8%; */\n}\n.card div button:hover {\n    background-color: var(--hover);\n    color: red;\n}\n.btnCard {\n    border: none;\n    padding: 0;\n    font-size: 4vw;\n    background: transparent;\n    cursor: pointer;\n    color: #cd4932;\n    width: 5vw;\n}\n.btnElement {\n    border: none;\n    background: transparent;\n}\n.strike {\n    text-decoration-line: line-through;\n    color: green;\n    font-weight: lighter;\n}\n#formAdd {\n    padding: 2vw;\n    background-color: aliceblue;\n    /* border: double 2vw pink; */\n    width: 90vw;\n    position: fixed;\n    bottom: 20vh;\n    left: 7vw;\n    font-size: 1.5vw;\n}\n.btnNav {\n    width: 35%;\n    color: whitesmoke;\n    font-size: 3vh;\n}\n.btnForm {\n    background-color: var(--btnBGC);\n    width: 50%;\n    color: whitesmoke;\n    font-size: 2vh;\n}\n.btnNav:hover,\n.btnForm:hover,\n#navSubMenu a:hover {\n    background-color: var(--hover);\n    color: whitesmoke;\n    cursor: pointer;\n}\n\n.close {\n    float: right;\n    transform: translateX(30%);\n    /* takes it outside the form */\n    border: 1px solid gray;\n    border-radius: 50%;\n    /* creates circle */\n    padding: 0.6em;\n    background: black;\n    color: white;\n    text-decoration: none;\n}\n.wide {\n    width: 100%;\n    padding: 1vw;\n    display: block;\n}\nfooter {\n    position: fixed;\n    bottom: 0;\n    width: 100vw;\n    height: auto;\n}\nul {\n    list-style: none;\n    background-color: #a5dbe6;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    padding-top: 2vw;\n}\nli {\n    text-align: center;\n}\nli:hover {\n    background-color: #cd4932;\n}\n#navSubMenu {\n    background-color: #a5dbe6;\n    padding: 2vw 0;\n    display: flex;\n    justify-content: space-between;\n    overflow: scroll;\n}\n#navSubMenu a {\n    padding-right: 2vw;\n    text-align: center;\n    font-size: 3vw;\n}\n\n@media only screen and (min-width: 600px) {\n    html {\n        font-size: 2vw;\n    }\n    #content {\n        grid-template-columns: 8fr 55fr;\n        grid-template-areas:\n            'header header'\n            'footer main';\n    }\n    #header {\n        display: grid;\n        grid-area: header;\n    }\n    #main {\n        /* display: grid; */\n        grid-area: 'main';\n    }\n    .btnCard {\n        width: 3vw;\n    }\n    .card div {\n        font-size: 2vw;\n    }\n    #formAdd {\n        width: 50vw;\n        left: 30vw;\n    }\n    footer {\n        position: relative;\n        display: grid;\n        grid-area: footer;\n        width: 8vw;\n        margin: 0;\n        padding: 0;\n    }\n    #navSubMenu {\n        display: block;\n        padding-left: 1vw;\n        text-align: center;\n        overflow: unset;\n    }\n    #navSubMenu a {\n        font-size: 2vw;\n        padding-top: 2vw;\n    }\n    ul {\n        flex-direction: column;\n        justify-content: flex-start;\n    }\n    li {\n        padding: 2vw;\n    }\n    .btnNav {\n        width: 3vw;\n    }\n}\n@media only screen and (min-width: 1025px) {\n    html {\n    }\n    body {\n        display: flex;\n        justify-content: center;\n    }\n    #content {\n        width: 70vw;\n    }\n\n    #main {\n    }\n    .card div {\n        font-size: 1vw;\n    }\n    footer {\n    }\n    ul {\n        justify-content: space-evenly;\n    }\n    li {\n        padding: 0;\n    }\n    #navSubMenu {\n        padding: 0;\n        overflow: visible;\n        font-size: 1vw;\n    }\n    #navSubMenu a {\n        font-size: 1vw;\n    }\n    .btnCard {\n        width: 2vw;\n    }\n    .btnNav {\n        width: 3vw;\n        padding: 2vh 0;\n    }\n    .card {\n    }\n}\n","",{version:3,sources:["webpack://./dist/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,eAAe;IACf,qBAAqB;IACrB,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,gDAAgD;IAChD,eAAe;IACf,YAAY;IACZ;;;;;;;;SAQK;IACL,+BAA+B;AACnC;;AAEA;IACI,UAAU;IACV,iBAAiB;IACjB,aAAa;IACb,iCAAiC;IACjC,yBAAyB;AAC7B;;AAEA;IACI,oBAAoB;IACpB,6BAA6B;IAC7B,kBAAkB;IAClB,cAAc;AAClB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,8BAA8B;IAC9B,YAAY;IACZ,yBAAyB;AAC7B;AACA;IACI,+BAA+B;AACnC;AACA;IACI,aAAa;IACb,8BAA8B;IAC9B,gBAAgB;AACpB;AACA;IACI,6BAA6B;AACjC;AACA;IACI,mBAAmB;IACnB,mBAAmB;AACvB;AACA;IACI,mBAAmB;AACvB;AACA;IACI,+BAA+B;IAC/B,2BAA2B;IAC3B,8BAA8B;;IAE9B,uBAAuB;AAC3B;AACA;IACI,+BAA+B;IAC/B,2BAA2B;IAC3B,8BAA8B;IAC9B,uBAAuB;AAC3B;AACA;IACI,+BAA+B;IAC/B,2BAA2B;IAC3B,8BAA8B;IAC9B,uBAAuB;AAC3B;AACA;IACI,8BAA8B;IAC9B,UAAU;AACd;AACA;IACI,YAAY;IACZ,UAAU;IACV,cAAc;IACd,uBAAuB;IACvB,eAAe;IACf,cAAc;IACd,UAAU;AACd;AACA;IACI,YAAY;IACZ,uBAAuB;AAC3B;AACA;IACI,kCAAkC;IAClC,YAAY;IACZ,oBAAoB;AACxB;AACA;IACI,YAAY;IACZ,2BAA2B;IAC3B,6BAA6B;IAC7B,WAAW;IACX,eAAe;IACf,YAAY;IACZ,SAAS;IACT,gBAAgB;AACpB;AACA;IACI,UAAU;IACV,iBAAiB;IACjB,cAAc;AAClB;AACA;IACI,+BAA+B;IAC/B,UAAU;IACV,iBAAiB;IACjB,cAAc;AAClB;AACA;;;IAGI,8BAA8B;IAC9B,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,0BAA0B;IAC1B,8BAA8B;IAC9B,sBAAsB;IACtB,kBAAkB;IAClB,mBAAmB;IACnB,cAAc;IACd,iBAAiB;IACjB,YAAY;IACZ,qBAAqB;AACzB;AACA;IACI,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;AACA;IACI,eAAe;IACf,SAAS;IACT,YAAY;IACZ,YAAY;AAChB;AACA;IACI,gBAAgB;IAChB,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,gBAAgB;AACpB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;IACzB,cAAc;IACd,aAAa;IACb,8BAA8B;IAC9B,gBAAgB;AACpB;AACA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI;QACI,cAAc;IAClB;IACA;QACI,+BAA+B;QAC/B;;yBAEiB;IACrB;IACA;QACI,aAAa;QACb,iBAAiB;IACrB;IACA;QACI,mBAAmB;QACnB,iBAAiB;IACrB;IACA;QACI,UAAU;IACd;IACA;QACI,cAAc;IAClB;IACA;QACI,WAAW;QACX,UAAU;IACd;IACA;QACI,kBAAkB;QAClB,aAAa;QACb,iBAAiB;QACjB,UAAU;QACV,SAAS;QACT,UAAU;IACd;IACA;QACI,cAAc;QACd,iBAAiB;QACjB,kBAAkB;QAClB,eAAe;IACnB;IACA;QACI,cAAc;QACd,gBAAgB;IACpB;IACA;QACI,sBAAsB;QACtB,2BAA2B;IAC/B;IACA;QACI,YAAY;IAChB;IACA;QACI,UAAU;IACd;AACJ;AACA;IACI;IACA;IACA;QACI,aAAa;QACb,uBAAuB;IAC3B;IACA;QACI,WAAW;IACf;;IAEA;IACA;IACA;QACI,cAAc;IAClB;IACA;IACA;IACA;QACI,6BAA6B;IACjC;IACA;QACI,UAAU;IACd;IACA;QACI,UAAU;QACV,iBAAiB;QACjB,cAAc;IAClB;IACA;QACI,cAAc;IAClB;IACA;QACI,UAAU;IACd;IACA;QACI,UAAU;QACV,cAAc;IAClB;IACA;IACA;AACJ",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n:root {\n    --hover: #b0438a;\n    --shadow: #5ca3b4;\n    --form: #005f73;\n    --formBorder: #001219;\n    --button: #eee8aa;\n    --btnBGC: #24a0ed;\n}\n\nhtml {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 14px;\n    opacity: 0.9;\n    background-image: radial-gradient(circle at center center, #3755b8, #4fc8c8),\n        repeating-radial-gradient(\n            circle at center center,\n            #3755b8,\n            #3755b8,\n            8px,\n            transparent 16px,\n            transparent 8px\n        );\n    background-blend-mode: multiply;\n}\n\n#content {\n    padding: 0;\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: auto 1fr auto;\n    background-color: #a5dbe6;\n}\n\n#header {\n    color: var(--button);\n    background-color: var(--form);\n    text-align: center;\n    padding: 3vh 0;\n}\n#main {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10vh;\n}\n.card {\n    border: solid var(--hover) 1px;\n    padding: 1vw;\n    background-color: #93cdda;\n}\n.card:nth-child(2n + 1) {\n    background-color: var(--shadow);\n}\n.card div {\n    display: flex;\n    justify-content: space-between;\n    font-size: 3.5vw;\n}\n.card div:nth-child(4) {\n    justify-content: space-evenly;\n}\n.title {\n    font-weight: bolder;\n    padding-bottom: 2vh;\n}\n.project {\n    padding-bottom: 3vw;\n}\n.high {\n    border-right: 7vw solid #ff595e;\n    border-top-right-radius: 8%;\n    border-bottom-right-radius: 8%;\n\n    /* border-radius: 8%; */\n}\n.medium {\n    border-right: 7vw solid #fcf6bd;\n    border-top-right-radius: 8%;\n    border-bottom-right-radius: 8%;\n    /* border-radius: 8%; */\n}\n.low {\n    border-right: 7vw solid #52b788;\n    border-top-right-radius: 8%;\n    border-bottom-right-radius: 8%;\n    /* border-radius: 8%; */\n}\n.card div button:hover {\n    background-color: var(--hover);\n    color: red;\n}\n.btnCard {\n    border: none;\n    padding: 0;\n    font-size: 4vw;\n    background: transparent;\n    cursor: pointer;\n    color: #cd4932;\n    width: 5vw;\n}\n.btnElement {\n    border: none;\n    background: transparent;\n}\n.strike {\n    text-decoration-line: line-through;\n    color: green;\n    font-weight: lighter;\n}\n#formAdd {\n    padding: 2vw;\n    background-color: aliceblue;\n    /* border: double 2vw pink; */\n    width: 90vw;\n    position: fixed;\n    bottom: 20vh;\n    left: 7vw;\n    font-size: 1.5vw;\n}\n.btnNav {\n    width: 35%;\n    color: whitesmoke;\n    font-size: 3vh;\n}\n.btnForm {\n    background-color: var(--btnBGC);\n    width: 50%;\n    color: whitesmoke;\n    font-size: 2vh;\n}\n.btnNav:hover,\n.btnForm:hover,\n#navSubMenu a:hover {\n    background-color: var(--hover);\n    color: whitesmoke;\n    cursor: pointer;\n}\n\n.close {\n    float: right;\n    transform: translateX(30%);\n    /* takes it outside the form */\n    border: 1px solid gray;\n    border-radius: 50%;\n    /* creates circle */\n    padding: 0.6em;\n    background: black;\n    color: white;\n    text-decoration: none;\n}\n.wide {\n    width: 100%;\n    padding: 1vw;\n    display: block;\n}\nfooter {\n    position: fixed;\n    bottom: 0;\n    width: 100vw;\n    height: auto;\n}\nul {\n    list-style: none;\n    background-color: #a5dbe6;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    padding-top: 2vw;\n}\nli {\n    text-align: center;\n}\nli:hover {\n    background-color: #cd4932;\n}\n#navSubMenu {\n    background-color: #a5dbe6;\n    padding: 2vw 0;\n    display: flex;\n    justify-content: space-between;\n    overflow: scroll;\n}\n#navSubMenu a {\n    padding-right: 2vw;\n    text-align: center;\n    font-size: 3vw;\n}\n\n@media only screen and (min-width: 600px) {\n    html {\n        font-size: 2vw;\n    }\n    #content {\n        grid-template-columns: 8fr 55fr;\n        grid-template-areas:\n            'header header'\n            'footer main';\n    }\n    #header {\n        display: grid;\n        grid-area: header;\n    }\n    #main {\n        /* display: grid; */\n        grid-area: 'main';\n    }\n    .btnCard {\n        width: 3vw;\n    }\n    .card div {\n        font-size: 2vw;\n    }\n    #formAdd {\n        width: 50vw;\n        left: 30vw;\n    }\n    footer {\n        position: relative;\n        display: grid;\n        grid-area: footer;\n        width: 8vw;\n        margin: 0;\n        padding: 0;\n    }\n    #navSubMenu {\n        display: block;\n        padding-left: 1vw;\n        text-align: center;\n        overflow: unset;\n    }\n    #navSubMenu a {\n        font-size: 2vw;\n        padding-top: 2vw;\n    }\n    ul {\n        flex-direction: column;\n        justify-content: flex-start;\n    }\n    li {\n        padding: 2vw;\n    }\n    .btnNav {\n        width: 3vw;\n    }\n}\n@media only screen and (min-width: 1025px) {\n    html {\n    }\n    body {\n        display: flex;\n        justify-content: center;\n    }\n    #content {\n        width: 70vw;\n    }\n\n    #main {\n    }\n    .card div {\n        font-size: 1vw;\n    }\n    footer {\n    }\n    ul {\n        justify-content: space-evenly;\n    }\n    li {\n        padding: 0;\n    }\n    #navSubMenu {\n        padding: 0;\n        overflow: visible;\n        font-size: 1vw;\n    }\n    #navSubMenu a {\n        font-size: 1vw;\n    }\n    .btnCard {\n        width: 2vw;\n    }\n    .btnNav {\n        width: 3vw;\n        padding: 2vh 0;\n    }\n    .card {\n    }\n}\n"],sourceRoot:""}]);const d=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var A=this[d][0];null!=A&&(a[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],d=0;d<n.length;d++){var A=n[d],c=o.base?A[0]+o.base:A[0],l=i[c]||0,s="".concat(c," ").concat(l);i[c]=l+1;var p=t(s),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=d,e.splice(d,0,{identifier:s,updater:m,references:1})}a.push(s)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var d=t(i[a]);e[d].references--}for(var A=o(n,r),c=0;c<i.length;c++){var l=t(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{function n(n,e,t,o,r,i){return{title:n,description:e,priority:t,project:o,deadline:r,completed:i}}function e(e){const t=JSON.parse(window.localStorage.getItem("ToDoList")),o=document.getElementById("title").value.toUpperCase();if(""===o)return void alert("PLEASE ENTER A TASK TITLE");if(t.some((n=>n.title===o))&&"number"!=typeof e||t.some((n=>n.title===o))&&"number"==typeof e&&o!==t[e].title)return void alert(`"${o}": CHANGE TASK TITLE TO AVOID DUPLICATES`);const r=document.getElementById("description").value;let i=document.getElementById("priorityLevel").value;switch(i){case"High":i=3;break;case"Medium":i=2;break;case"Low":i=1}const a=document.getElementById("project").value,d=document.getElementById("deadline").value;!function(n,e){const t=JSON.parse(window.localStorage.getItem("ToDoList"));"number"==typeof e?t.splice(e,1,n):t.push(n),localStorage.setItem("ToDoList",JSON.stringify(t))}(n(o,r,i,a,d,!1),e)}function o(n){n.preventDefault();const e=document.querySelectorAll(".wide");let t=0;for(t=0;t<=e.length-1;t++)e[t].value=""}const r=function(n){const t=document.createElement("form");t.id="formAdd";const r=document.createElement("a");r.innerHTML='<a class="close" href="javascript:window.location.reload()">&#10060</a>',t.appendChild(r);const i=document.createElement("fieldset"),a=document.createElement("legend");a.innerHTML=n?"<b>EDIT FIELDS AS REQUIRED</b>":"<b>ENTER NEW TASK INFORMATION</b>",document.createElement("br");const d=document.createElement("input");d.setAttribute("type","date"),d.setAttribute("name","Task"),d.classList.add("wide"),d.id="deadline";const A=["title","description"];let c=0;for(c=0;c<=A.length-1;c++){const n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("name","Task"),n.setAttribute("placeholder",A[c]),n.classList.add("wide"),n.id=A[c],i.appendChild(n)}i.appendChild(d);const l=document.createElement("p");l.id="priority";const s=document.createElement("label");s.innerHTML="Choose your priority: ",s.htmlFor="priority";const p=["Low","Medium","High"],u=document.createElement("select");u.name="priority",u.id="priorityLevel",u.classList.add("wide");let m=0;for(m=0;m<=p.length-1;m++){const n=document.createElement("option");n.value=p[m],n.text=p[m],u.appendChild(n)}l.appendChild(s).appendChild(u),i.appendChild(l);const C=document.createElement("input");C.setAttribute("list","projects"),C.setAttribute("name","project"),C.id="project",C.value="Unknown",C.classList.add("wide");const g=document.createElement("label");g.innerHTML="Choose/ Enter Project name: ",g.htmlFor="project",i.appendChild(g);const h=JSON.parse(window.localStorage.getItem("ToDoList")),v=[...new Set(h.map((n=>n.project)))],B=document.createElement("datalist");B.id="projects",B.classList.add("wide");for(let n=0;n<=v.length-1;n++){const e=document.createElement("option");e.value=v[n],e.text=v[n],B.appendChild(e)}C.appendChild(B),i.appendChild(C);const b=document.createElement("button");b.setAttribute("type","reset"),b.classList.add("btnForm"),b.innerText="CLEAR",i.appendChild(b),b.addEventListener("click",o);const I=document.createElement("button");I.setAttribute("type","submit"),I.innerText="SAVE",I.classList.add("btnForm"),n>=0?I.addEventListener("click",(()=>{e(n)}),!1):I.addEventListener("click",e),i.appendChild(a),i.appendChild(I),t.appendChild(i),document.body.appendChild(t);const f=document.getElementById("title");f.focus(),f.select(),f.setAttribute("required","")};function i(n){const e=n.target.id,t=JSON.parse(window.localStorage.getItem("ToDoList"));e.includes("Date")?t.sort(((n,e)=>n.deadline>e.deadline?1:-1)):e.includes("Title")?t.sort(((n,e)=>n.title<e.title?1:-1)):e.includes("Priority")?t.sort(((n,e)=>n.priority>e.priority?1:-1)):e.includes("Done")&&t.sort(((n,e)=>n.completed>e.completed?1:-1)),localStorage.setItem("ToDoList",JSON.stringify(t)),window.location.reload()}const a=function(n){const e=n.target.parentElement.parentElement.previousElementSibling,t=n.target.parentElement.parentElement.previousElementSibling.previousElementSibling,o=n.target.parentElement;this.dataset.clicked?(o.innerHTML="<img src = 'images/detail.png' class = 'btnCard detail'>",this.removeAttribute("data-clicked"),e.style.display="none",t.style.display="none"):(o.innerHTML="<img src = 'images/slim.png' class = 'btnCard slim'>",this.setAttribute("data-clicked","true"),e.style.display="block",t.style.display="block")},d=function(n){const e=n.target.parentElement.parentElement.parentElement.childNodes[0].childNodes[0].firstChild.data,t=JSON.parse(window.localStorage.getItem("ToDoList")),o=t.findIndex((n=>n.title===e));t.length<=1?(alert("This is the last task - DO NOT TRY TO DELETE"),window.location.reload()):confirm("The deletion will be final: PROCEED?")?(t.splice(o,1),localStorage.setItem("ToDoList",JSON.stringify(t)),window.location.reload()):window.location.reload()},A=JSON.parse(window.localStorage.getItem("ToDoList")),c=function(n){const e=n.target.parentElement.parentElement.parentElement.childNodes[0].childNodes[0].firstChild.data,t=A.findIndex((n=>n.title===e));!1===A[t].completed?A[t].completed=!0:A[t].completed=!1,localStorage.setItem("ToDoList",JSON.stringify(A)),window.location.reload()},l=function(n){const e=document.getElementById("projectListDiv");e&&(e.innerHTML="");const t=document.getElementById("sortDiv");t&&(t.innerHTML="");const o=JSON.parse(window.localStorage.getItem("ToDoList")),i=n.target.parentElement.parentElement.parentElement.childNodes[0].childNodes[0].firstChild.data,a=o.findIndex((n=>n.title===i));r(a),document.getElementById("title").value=o[a].title,document.getElementById("description").value=o[a].description,document.getElementById("project").value=o[a].project,document.getElementById("deadline").value=o[a].deadline;let d="";switch(o[a].priority){case 3:d="High";break;case 2:d="Medium";break;case 1:d="Low"}document.getElementById("priorityLevel").value=d},s=document.getElementById("content");function p(n,e){let t=n.length;for(t=n.length-1;t>=0;t--){const o=document.createElement("card");o.classList.add("card");const r=document.createElement("div");o.appendChild(r);const i=document.createElement("div");o.appendChild(i);const A=document.createElement("div");o.appendChild(A);const s=document.createElement("div");o.appendChild(s);const p=document.createElement("p");p.classList.add("title"),p.innerHTML=n[t].title,r.appendChild(p);const u=document.createElement("deadline");u.classList.add("deadline"),u.innerHTML=`<b>Due</b>: ${n[t].deadline}`,r.appendChild(u);const m=document.createElement("project");m.classList.add("project"),m.innerHTML=`<b>Project</b>: ${n[t].project}`,i.appendChild(m);const C=document.createElement("description");C.classList.add("description"),C.innerHTML=`<i>${n[t].description}</i>`,A.appendChild(C);const g=document.createElement("button");g.classList.add("btnElement"),g.addEventListener("click",c),!0===n[t].completed?g.innerHTML="<img src = 'images/check.png' class = 'btnCard done'>":g.innerHTML="<img src = 'images/pending.png' class = 'btnCard done'>",s.appendChild(g);const h=document.createElement("button");h.addEventListener("click",a),h.classList.add("btnElement"),h.innerHTML="<img src = 'images/detail.png' class = 'btnCard detail'>",s.appendChild(h);const v=document.createElement("button");v.addEventListener("click",l),v.classList.add("btnElement"),v.innerHTML="<img src = 'images/edit.png' class = 'btnCard edit'>",s.appendChild(v);const B=document.createElement("button");B.addEventListener("click",d),B.classList.add("btnElement"),B.innerHTML="<img src = 'images/delete.png' class = 'btnCard delete'>",s.appendChild(B),3===n[t].priority&&o.classList.add("high"),2===n[t].priority&&o.classList.add("medium"),1===n[t].priority&&o.classList.add("low"),!0===n[t].completed&&(o.style.borderRight="none",o.classList.add("strike")),i.style.display="none",A.style.display="none",e.appendChild(o)}}function u(n){const e=JSON.parse(window.localStorage.getItem("ToDoList")).filter((e=>e.project===n.target.innerHTML)),t=document.getElementById("main");t.innerHTML="",p(e,t)}function m(n){if(this.removeEventListener("click",m),n.target.className.includes("plus")){const n=document.getElementById("projectListDiv");n&&(n.innerHTML="");const e=document.getElementById("sortDiv");e&&(e.innerHTML=""),r()}else n.target.className.includes("sort")?function(){const n=document.getElementById("navSubMenu");n.innerHTML="";const e=document.createElement("br"),t=["<b>SORT BY:</b>","Title","Date","Priority","Done"];let o=0;for(o=0;o<=t.length-1;o++){const r=document.createElement("a");r.innerHTML=`${t[o]}`,r.id=`${t[o]}`,r.addEventListener("click",i),n.appendChild(r),n.appendChild(e.cloneNode()),n.appendChild(e.cloneNode())}}():n.target.className.includes("home")?window.location.reload():n.target.className.includes("project")&&function(){const n=document.getElementById("navSubMenu");n.innerHTML="";const e=document.createElement("br"),t=document.createElement("p");t.innerHTML="<b>PROJECTS:</b>",n.appendChild(t),n.appendChild(e.cloneNode());const o=JSON.parse(window.localStorage.getItem("ToDoList")),r=[...new Set(o.map((n=>n.project)))];r.length>6&&alert("Too Many Projects to display all");let i=0;for(i=0;i<=r.length-1;i++){const t=document.createElement("a");t.innerHTML=`${r[i]}`,n.appendChild(t),n.appendChild(e.cloneNode()),n.appendChild(e.cloneNode()),t.addEventListener("click",u)}}()}var C=t(379),g=t.n(C),h=t(795),v=t.n(h),B=t(569),b=t.n(B),I=t(565),f=t.n(I),w=t(216),y=t.n(w),E=t(589),L=t.n(E),k=t(341),T={};T.styleTagTransform=L(),T.setAttributes=f(),T.insert=b().bind(null,"head"),T.domAPI=v(),T.insertStyleElement=y(),g()(k.Z,T),k.Z&&k.Z.locals&&k.Z.locals,function(){const e=localStorage.getItem("ToDoList");if(null===e||e.length<3){alert("\n\nLocal Storage is either empty or does not exist. \n \nCreating 'local-storage' list array with a sample task");const e=n("BUY MILK","From here, we can easily conclude that it’s best to go for three sizes: desktop, tablet, and phone.","High","Groceries",new Date,!1),t=[];t.push(e),localStorage.setItem("ToDoList",JSON.stringify(t))}!function(){const n=document.createElement("div");n.id="header";const e=document.createElement("h1");e.innerHTML="THINGS TO DO",n.appendChild(e),s.appendChild(n)}(),function(){const n=document.createElement("div");n.id="main",s.appendChild(n),p(JSON.parse(window.localStorage.getItem("ToDoList")),n)}(),function(){const n=document.createElement("footer"),e=document.createElement("navbar");e.id="navbar";const t=["<img src = 'images/home.png'  class = 'home btnNav'>","<img src = 'images/plus.png'  class = 'plus btnNav'>","<img src = 'images/project.png'  class = 'projectList btnNav'>","<img src = 'images/sort.png'  class = 'sort btnNav'>"],o=document.createElement("ul");let r=0;for(r=0;r<=t.length-1;r++){const n=document.createElement("li");n.innerHTML=`${t[r]}`,n.classList.add("menuItem"),o.appendChild(n)}const i=document.createElement("div");i.id="navSubMenu",e.appendChild(o),e.appendChild(i),n.appendChild(e),s.appendChild(n)}(),function(){const n=document.getElementsByClassName("menuItem");let e=0;for(e=0;e<=n.length-1;e++)n[e].addEventListener("click",m)}()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,