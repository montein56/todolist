(()=>{"use strict";var n={341:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),i=t(645),a=t.n(i),d=t(667),c=t.n(d),A=new URL(t(354),t.b),l=a()(r()),s=c()(A);l.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n:root {\n    --hover: #b0438a;\n    --shadow: #5ca3b4;\n    --form: #005f73;\n    --formBorder: #001219;\n    --button: #eee8aa;\n    --btnBGC: #24a0ed;\n}\n\nhtml {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 16px;\n    opacity: 0.9;\n    background-image: radial-gradient(circle at center center, #3755b8, #4fc8c8),\n        repeating-radial-gradient(\n            circle at center center,\n            #3755b8,\n            #3755b8,\n            8px,\n            transparent 16px,\n            transparent 8px\n        );\n    background-blend-mode: multiply;\n}\n\n#content {\n    padding: 0;\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: auto 1fr auto;\n    background-color: #a5dbe6;\n}\n\n#header {\n    color: var(--button);\n    background-color: var(--form);\n    text-align: center;\n    padding: 3vh 0;\n}\n#main {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10vh;\n    background-image: url("+s+");\n}\n.card {\n    border: solid var(--hover) 1px;\n    padding: 1vw;\n    margin: 3vw;\n    background-color: #93cdda;\n}\n.card:nth-child(2n + 1) {\n    background-color: var(--shadow);\n}\n.card div {\n    display: flex;\n    justify-content: space-between;\n}\n.title {\n    font-weight: bolder;\n    padding-bottom: 2vh;\n}\n.project {\n    padding-bottom: 3vw;\n}\n.high {\n    border-right: 5vh solid #ff595e;\n    border-radius: 10px;\n}\n.medium {\n    border-right: 5vh solid #fcf6bd;\n    border-radius: 10px;\n}\n.low {\n    border-right: 5vh solid #52b788;\n    border-radius: 10px;\n}\n.card div button:hover {\n    background-color: var(--hover);\n    color: red;\n}\n.trash,\n.edit,\n.done {\n    border: none;\n    padding: 0;\n    font-size: 4vw;\n    background: transparent;\n    cursor: pointer;\n    color: #cd4932;\n}\n.strike {\n    text-decoration-line: line-through;\n    color: green;\n    font-weight: lighter;\n}\n#formAdd {\n    padding: 2vw;\n    background-color: aliceblue;\n    border: double 2vw pink;\n    width: 90vw;\n    position: fixed;\n    bottom: 20vh;\n    left: 7vw;\n}\n#btnAdd,\n#btnEdit {\n    background-color: var(--btnBGC);\n    width: 100%;\n    color: whitesmoke;\n    font-size: 3vh;\n}\n#btnAdd:hover {\n    background-color: var(--hover);\n    color: red;\n}\n.close {\n    float: right;\n    transform: translateX(30%);\n    /* takes it outside the form */\n    border: 1px solid gray;\n    border-radius: 50%;\n    /* creates circle */\n    padding: 0.6em;\n    background: black;\n    color: white;\n    text-decoration: none;\n}\n.wide {\n    width: 100%;\n    padding: 1vw;\n}\nfooter {\n    position: fixed;\n    bottom: 0;\n    width: 100vw;\n    height: auto;\n}\nul {\n    list-style: none;\n    background-color: #a5dbe6;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n}\nli {\n    padding: 2vw;\n    font-size: 9vw;\n    text-align: center;\n}\nli:hover {\n    background-color: #cd4932;\n}\n#sortDiv {\n    background-color: rgb(110, 141, 182);\n    padding: 3vw;\n}\n#sortDiv a {\n    display: flex;\n    justify-content: right;\n    color: rgb(117, 0, 128);\n    text-align: center;\n    cursor: pointer;\n    padding-right: 10vw;\n}\n\n@media only screen and (min-width: 600px) {\n    #content {\n        grid-template-columns: 1fr 10fr;\n        grid-template-areas:\n            'header header'\n            'footer main';\n    }\n    #header {\n        display: grid;\n        grid-area: header;\n    }\n    #main {\n        display: grid;\n        grid-area: main;\n        margin-bottom: 0;\n    }\n    #formAdd {\n        width: 50vw;\n        left: 30vw;\n    }\n    .trash,\n    .edit,\n    .done {\n        font-size: 3vw;\n    }\n    footer {\n        position: relative;\n        display: grid;\n        grid-area: footer;\n        width: 12.5vw;\n        margin: 0;\n        padding: 0;\n    }\n    ul {\n        display: flex;\n        flex-direction: column;\n    }\n    li {\n        font-size: 5vw;\n    }\n    #sortDiv {\n        position: absolute;\n        display: block;\n    }\n    #sortDiv a {\n        position: relative;\n        left: 5vw;\n        padding-right: 3vw;\n    }\n}\n@media only screen and (min-width: 1025px) {\n    html {\n        display: flex;\n        justify-content: center;\n    }\n    #content {\n        width: 50vw;\n    }\n    .trash,\n    .edit,\n    .done {\n        font-size: 2vw;\n    }\n    .card {\n        margin: 1vw;\n    }\n    footer {\n        width: 8vw;\n    }\n}\n","",{version:3,sources:["webpack://./dist/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,eAAe;IACf,qBAAqB;IACrB,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,gDAAgD;IAChD,eAAe;IACf,YAAY;IACZ;;;;;;;;SAQK;IACL,+BAA+B;AACnC;;AAEA;IACI,UAAU;IACV,iBAAiB;IACjB,aAAa;IACb,iCAAiC;IACjC,yBAAyB;AAC7B;;AAEA;IACI,oBAAoB;IACpB,6BAA6B;IAC7B,kBAAkB;IAClB,cAAc;AAClB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,yDAA8C;AAClD;AACA;IACI,8BAA8B;IAC9B,YAAY;IACZ,WAAW;IACX,yBAAyB;AAC7B;AACA;IACI,+BAA+B;AACnC;AACA;IACI,aAAa;IACb,8BAA8B;AAClC;AACA;IACI,mBAAmB;IACnB,mBAAmB;AACvB;AACA;IACI,mBAAmB;AACvB;AACA;IACI,+BAA+B;IAC/B,mBAAmB;AACvB;AACA;IACI,+BAA+B;IAC/B,mBAAmB;AACvB;AACA;IACI,+BAA+B;IAC/B,mBAAmB;AACvB;AACA;IACI,8BAA8B;IAC9B,UAAU;AACd;AACA;;;IAGI,YAAY;IACZ,UAAU;IACV,cAAc;IACd,uBAAuB;IACvB,eAAe;IACf,cAAc;AAClB;AACA;IACI,kCAAkC;IAClC,YAAY;IACZ,oBAAoB;AACxB;AACA;IACI,YAAY;IACZ,2BAA2B;IAC3B,uBAAuB;IACvB,WAAW;IACX,eAAe;IACf,YAAY;IACZ,SAAS;AACb;AACA;;IAEI,+BAA+B;IAC/B,WAAW;IACX,iBAAiB;IACjB,cAAc;AAClB;AACA;IACI,8BAA8B;IAC9B,UAAU;AACd;AACA;IACI,YAAY;IACZ,0BAA0B;IAC1B,8BAA8B;IAC9B,sBAAsB;IACtB,kBAAkB;IAClB,mBAAmB;IACnB,cAAc;IACd,iBAAiB;IACjB,YAAY;IACZ,qBAAqB;AACzB;AACA;IACI,WAAW;IACX,YAAY;AAChB;AACA;IACI,eAAe;IACf,SAAS;IACT,YAAY;IACZ,YAAY;AAChB;AACA;IACI,gBAAgB;IAChB,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,6BAA6B;AACjC;AACA;IACI,YAAY;IACZ,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,oCAAoC;IACpC,YAAY;AAChB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,kBAAkB;IAClB,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI;QACI,+BAA+B;QAC/B;;yBAEiB;IACrB;IACA;QACI,aAAa;QACb,iBAAiB;IACrB;IACA;QACI,aAAa;QACb,eAAe;QACf,gBAAgB;IACpB;IACA;QACI,WAAW;QACX,UAAU;IACd;IACA;;;QAGI,cAAc;IAClB;IACA;QACI,kBAAkB;QAClB,aAAa;QACb,iBAAiB;QACjB,aAAa;QACb,SAAS;QACT,UAAU;IACd;IACA;QACI,aAAa;QACb,sBAAsB;IAC1B;IACA;QACI,cAAc;IAClB;IACA;QACI,kBAAkB;QAClB,cAAc;IAClB;IACA;QACI,kBAAkB;QAClB,SAAS;QACT,kBAAkB;IACtB;AACJ;AACA;IACI;QACI,aAAa;QACb,uBAAuB;IAC3B;IACA;QACI,WAAW;IACf;IACA;;;QAGI,cAAc;IAClB;IACA;QACI,WAAW;IACf;IACA;QACI,UAAU;IACd;AACJ",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n:root {\n    --hover: #b0438a;\n    --shadow: #5ca3b4;\n    --form: #005f73;\n    --formBorder: #001219;\n    --button: #eee8aa;\n    --btnBGC: #24a0ed;\n}\n\nhtml {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 16px;\n    opacity: 0.9;\n    background-image: radial-gradient(circle at center center, #3755b8, #4fc8c8),\n        repeating-radial-gradient(\n            circle at center center,\n            #3755b8,\n            #3755b8,\n            8px,\n            transparent 16px,\n            transparent 8px\n        );\n    background-blend-mode: multiply;\n}\n\n#content {\n    padding: 0;\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: auto 1fr auto;\n    background-color: #a5dbe6;\n}\n\n#header {\n    color: var(--button);\n    background-color: var(--form);\n    text-align: center;\n    padding: 3vh 0;\n}\n#main {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10vh;\n    background-image: url(../src/images/lists.jpg);\n}\n.card {\n    border: solid var(--hover) 1px;\n    padding: 1vw;\n    margin: 3vw;\n    background-color: #93cdda;\n}\n.card:nth-child(2n + 1) {\n    background-color: var(--shadow);\n}\n.card div {\n    display: flex;\n    justify-content: space-between;\n}\n.title {\n    font-weight: bolder;\n    padding-bottom: 2vh;\n}\n.project {\n    padding-bottom: 3vw;\n}\n.high {\n    border-right: 5vh solid #ff595e;\n    border-radius: 10px;\n}\n.medium {\n    border-right: 5vh solid #fcf6bd;\n    border-radius: 10px;\n}\n.low {\n    border-right: 5vh solid #52b788;\n    border-radius: 10px;\n}\n.card div button:hover {\n    background-color: var(--hover);\n    color: red;\n}\n.trash,\n.edit,\n.done {\n    border: none;\n    padding: 0;\n    font-size: 4vw;\n    background: transparent;\n    cursor: pointer;\n    color: #cd4932;\n}\n.strike {\n    text-decoration-line: line-through;\n    color: green;\n    font-weight: lighter;\n}\n#formAdd {\n    padding: 2vw;\n    background-color: aliceblue;\n    border: double 2vw pink;\n    width: 90vw;\n    position: fixed;\n    bottom: 20vh;\n    left: 7vw;\n}\n#btnAdd,\n#btnEdit {\n    background-color: var(--btnBGC);\n    width: 100%;\n    color: whitesmoke;\n    font-size: 3vh;\n}\n#btnAdd:hover {\n    background-color: var(--hover);\n    color: red;\n}\n.close {\n    float: right;\n    transform: translateX(30%);\n    /* takes it outside the form */\n    border: 1px solid gray;\n    border-radius: 50%;\n    /* creates circle */\n    padding: 0.6em;\n    background: black;\n    color: white;\n    text-decoration: none;\n}\n.wide {\n    width: 100%;\n    padding: 1vw;\n}\nfooter {\n    position: fixed;\n    bottom: 0;\n    width: 100vw;\n    height: auto;\n}\nul {\n    list-style: none;\n    background-color: #a5dbe6;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n}\nli {\n    padding: 2vw;\n    font-size: 9vw;\n    text-align: center;\n}\nli:hover {\n    background-color: #cd4932;\n}\n#sortDiv {\n    background-color: rgb(110, 141, 182);\n    padding: 3vw;\n}\n#sortDiv a {\n    display: flex;\n    justify-content: right;\n    color: rgb(117, 0, 128);\n    text-align: center;\n    cursor: pointer;\n    padding-right: 10vw;\n}\n\n@media only screen and (min-width: 600px) {\n    #content {\n        grid-template-columns: 1fr 10fr;\n        grid-template-areas:\n            'header header'\n            'footer main';\n    }\n    #header {\n        display: grid;\n        grid-area: header;\n    }\n    #main {\n        display: grid;\n        grid-area: main;\n        margin-bottom: 0;\n    }\n    #formAdd {\n        width: 50vw;\n        left: 30vw;\n    }\n    .trash,\n    .edit,\n    .done {\n        font-size: 3vw;\n    }\n    footer {\n        position: relative;\n        display: grid;\n        grid-area: footer;\n        width: 12.5vw;\n        margin: 0;\n        padding: 0;\n    }\n    ul {\n        display: flex;\n        flex-direction: column;\n    }\n    li {\n        font-size: 5vw;\n    }\n    #sortDiv {\n        position: absolute;\n        display: block;\n    }\n    #sortDiv a {\n        position: relative;\n        left: 5vw;\n        padding-right: 3vw;\n    }\n}\n@media only screen and (min-width: 1025px) {\n    html {\n        display: flex;\n        justify-content: center;\n    }\n    #content {\n        width: 50vw;\n    }\n    .trash,\n    .edit,\n    .done {\n        font-size: 2vw;\n    }\n    .card {\n        margin: 1vw;\n    }\n    footer {\n        width: 8vw;\n    }\n}\n"],sourceRoot:""}]);const p=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],d=0;d<n.length;d++){var c=n[d],A=o.base?c[0]+o.base:c[0],l=i[A]||0,s="".concat(A," ").concat(l);i[A]=l+1;var p=t(s),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=r(u,o);o.byIndex=d,e.splice(d,0,{identifier:s,updater:m,references:1})}a.push(s)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var d=t(i[a]);e[d].references--}for(var c=o(n,r),A=0;A<i.length;A++){var l=t(i[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},354:(n,e,t)=>{n.exports=t.p+"9787ff218b35bad53318.jpg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{const n=function(n){const e=n.target.parentElement.parentElement.parentElement.childNodes[0].childNodes[0].firstChild.data,t=JSON.parse(window.localStorage.getItem("ToDoList")),o=t.findIndex((n=>n.title===e));t.length<=1?(alert("This is the last task - DO NOT TRY TO DELETE"),window.location.reload()):(t.splice(o,1),localStorage.setItem("ToDoList",JSON.stringify(t)),window.location.reload())};function e(n,e,t,o,r,i){return{title:n,description:e,priority:t,project:o,deadline:r,completed:i}}const o=function(n){const t=JSON.parse(window.localStorage.getItem("ToDoList")),o=document.getElementById("title").value.toUpperCase();if(""===o)return void alert("PLEASE ENTER A TASK TITLE");if(t.some((n=>n.title===o))&&"number"!=typeof n||t.some((n=>n.title===o))&&"number"==typeof n&&o!==t[n].title)return void alert(`"${o}" IGNORE IF NOT EDITING TASK TITLE. CHANGE TASK TITLE TO AVOID DUPLICATES`);const r=document.getElementById("description").value,i=document.getElementById("priority").value,a=document.getElementById("project").value,d=document.getElementById("deadline").value;!function(n,e){const t=JSON.parse(window.localStorage.getItem("ToDoList"));"number"==typeof e?t.splice(e,1,n):t.push(n),localStorage.setItem("ToDoList",JSON.stringify(t)),window.location.reload()}(e(o,r,i,a,d,!1),n)},r=function(n){const e=document.createElement("form");e.id="formAdd";const t=document.createElement("a");t.innerHTML='<a class="close" href="javascript:window.location.reload()">&#10060</a>',e.appendChild(t);const r=document.createElement("fieldset"),i=document.createElement("legend");i.innerHTML=n?"<b>EDIT FIELDS AS REQUIRED</b>":"<b>ENTER NEW TASK INFORMATION</b>";const a=document.createElement("br"),d=["title","description","project"];let c=0;for(c=0;c<=d.length-1;c++){const n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("name","Task"),n.setAttribute("placeholder",d[c]),n.classList.add("wide"),n.id=d[c],r.appendChild(n),r.appendChild(a.cloneNode())}const A=document.createElement("input");A.setAttribute("type","date"),A.setAttribute("name","Task"),A.setAttribute("placeholder","Enter date as yyyy-mm-dd"),A.classList.add("wide"),A.id="deadline",r.appendChild(A),r.appendChild(a.cloneNode());const l=document.createElement("p"),s=["Low","Medium","High"],p=document.createElement("select");p.name="priority",p.id="priority",p.classList.add("wide");let u=0;for(u=0;u<=s.length-1;u++){const n=document.createElement("option");n.value=s[u],n.text=s[u],p.appendChild(n)}const m=document.createElement("label");m.innerHTML="Choose your priority: ",m.htmlFor="priority",l.appendChild(m).appendChild(p),r.appendChild(l);const C=document.createElement("button");C.setAttribute("type","submit"),n>=0?(C.innerText="Save Edited Task",C.id="btnEdit",C.addEventListener("click",(()=>{o(n)}),!1)):(C.innerText="Save New Task",C.id="btnAdd",C.addEventListener("click",o)),r.appendChild(i),r.appendChild(C),e.appendChild(r),document.body.appendChild(e);const h=document.getElementById("title");h.focus(),h.select(),h.setAttribute("required","")};function i(n){const e=n.target.id,t=JSON.parse(window.localStorage.getItem("ToDoList"));e.includes("Date")?t.sort(((n,e)=>n.deadline>e.deadline?1:-1)):e.includes("Title")?t.sort(((n,e)=>n.title<e.title?1:-1)):e.includes("Project")?t.sort(((n,e)=>n.project>e.project?1:-1)):e.includes("Priority")?t.sort(((n,e)=>n.priority<e.priority?1:-1)):e.includes("Done")&&t.sort(((n,e)=>n.completed<e.completed?1:-1)),localStorage.setItem("ToDoList",JSON.stringify(t)),window.location.reload()}const a=function n(e){"number"==typeof e?r(e):e.target.className.includes("plus")?(this.removeEventListener("click",n),r()):e.target.className.includes("sort")&&(this.removeEventListener("click",n),function(){const n=document.getElementById("navbar"),e=document.createElement("br"),t=document.createElement("div");t.id="sortDiv";const o=["Title","Date","Project","Priority","Done"];let r=0;for(r=0;r<=o.length-1;r++){const n=document.createElement("a");n.id=`sort${o[r]}`,n.innerHTML=`<b>Sort:</b> ${o[r]}`,n.addEventListener("click",i),t.appendChild(n),t.appendChild(e.cloneNode()),t.appendChild(e.cloneNode())}n.appendChild(t)}())},d=function n(e){const t=JSON.parse(window.localStorage.getItem("ToDoList"));let o=0;for(o=0;o<=t.length-1;o++)document.getElementsByClassName("edit")[o].removeEventListener("click",n);const r=e.target.parentElement.parentElement.parentElement.childNodes[0].childNodes[0].firstChild.data,i=t.findIndex((n=>n.title===r));a(i),document.getElementById("title").value=t[i].title,document.getElementById("description").value=t[i].description,document.getElementById("project").value=t[i].project,document.getElementById("deadline").value=t[i].deadline,document.getElementById("priority").value=t[i].priority},c=JSON.parse(window.localStorage.getItem("ToDoList")),A=function(n){const e=n.target.parentElement.parentElement.parentElement.childNodes[0].childNodes[0].firstChild.data,t=c.findIndex((n=>n.title===e));!1===c[t].completed?(c[t].completed=!0,localStorage.setItem("ToDoList",JSON.stringify(c))):(c[t].completed=!1,localStorage.setItem("ToDoList",JSON.stringify(c))),window.location.reload()},l=document.getElementById("content");const s=function(){!function(){const n=document.createElement("div");n.id="header";const e=document.createElement("h1");e.innerHTML="THINGS TO DO",n.appendChild(e),l.appendChild(n)}(),function(){const e=document.createElement("div");e.id="main",l.appendChild(e),function(e){const t=JSON.parse(window.localStorage.getItem("ToDoList"));let o=t.length;for(o=t.length-1;o>=0;o--){const r=document.createElement("card");r.classList.add("card");const i=document.createElement("div");r.appendChild(i);const a=document.createElement("div");r.appendChild(a);const c=document.createElement("div");r.appendChild(c);const l=document.createElement("div");r.appendChild(l);const s=document.createElement("p");s.classList.add("title"),s.innerHTML=t[o].title,i.appendChild(s);const p=document.createElement("deadline");p.classList.add("deadline"),p.innerHTML=`<b>Due</b>: ${t[o].deadline}`,i.appendChild(p);const u=document.createElement("project");u.classList.add("project"),u.innerHTML=`<b>Project</b>: ${t[o].project}`,a.appendChild(u);const m=document.createElement("description");m.classList.add("description"),m.innerHTML=`<i>${t[o].description}</i>`,c.appendChild(m);const C=document.createElement("button");C.classList.add("done"),!0===t[o].completed?C.innerHTML='<i class="fa fa-check"></i>':C.innerHTML='<i class="fa fa-window-close-o"></i>',C.addEventListener("click",A),l.appendChild(C);const h=document.createElement("button");h.classList.add("edit"),h.innerHTML='<i class="fa fa-edit"></i>',h.addEventListener("click",d),l.appendChild(h);const g=document.createElement("button");g.classList.add("trash"),g.innerHTML='<i class="fa fa-trash"></i>',g.addEventListener("click",n),l.appendChild(g),"High"===t[o].priority&&r.classList.add("high"),"Medium"===t[o].priority&&r.classList.add("medium"),"Low"===t[o].priority&&r.classList.add("low"),!0===t[o].completed&&(r.style.borderRight="none",C.style.color="green",r.style.borderRight="none",r.classList.add("strike")),e.appendChild(r)}}(e)}(),function(){const n=document.createElement("footer"),e=document.createElement("navbar");e.id="navbar";const t=['<i class="fa fa-home"></i>','<i class="fa fa-plus-square"></i>','<i class="fa fa-calendar"></i>','<i class="fa fa-sort"></i>'],o=document.createElement("ul");let r=0;for(r=0;r<=t.length-1;r++){const n=document.createElement("li");n.innerHTML=`<a href="#">${t[r]}</a>`,n.classList.add("menuItem"),n.addEventListener("click",a),o.appendChild(n)}e.appendChild(o),n.appendChild(e),l.appendChild(n)}()};var p=t(379),u=t.n(p),m=t(795),C=t.n(m),h=t(569),g=t.n(h),f=t(565),I=t.n(f),v=t(216),B=t.n(v),b=t(589),w=t.n(b),y=t(341),E={};E.styleTagTransform=w(),E.setAttributes=I(),E.insert=g().bind(null,"head"),E.domAPI=C(),E.insertStyleElement=B(),u()(y.Z,E),y.Z&&y.Z.locals&&y.Z.locals,function(){const n=localStorage.getItem("ToDoList");if(null===n||n.length<3){alert("\n\nLocal Storage is either empty or does not exist. \n \nCreating 'local-storage' list array with a sample task");const n=e("BUY MILK","From here, we can easily conclude that it’s best to go for three sizes: desktop, tablet, and phone.","High","Groceries",new Date,!1),t=[];t.push(n),localStorage.setItem("ToDoList",JSON.stringify(t))}s()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,