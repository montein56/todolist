(()=>{"use strict";var n={341:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),i=t.n(o),r=t(645),a=t.n(r)()(i());a.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n:root {\n    --hover: #b0438a;\n    --shadow: #5ca3b4;\n    --form: #005f73;\n    --formBorder: #001219;\n    --button: #eee8aa;\n    --btnBGC: #24a0ed;\n}\n\nhtml {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 14px;\n    opacity: 0.9;\n    background-image: radial-gradient(circle at center center, #3755b8, #4fc8c8),\n        repeating-radial-gradient(\n            circle at center center,\n            #3755b8,\n            #3755b8,\n            8px,\n            transparent 16px,\n            transparent 8px\n        );\n    background-blend-mode: multiply;\n}\n\n#content {\n    padding: 0;\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: auto 1fr auto;\n    background-color: #a5dbe6;\n}\n\n#header {\n    color: var(--button);\n    background-color: var(--form);\n    text-align: center;\n    padding: 3vh 0;\n}\n#main {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10vh;\n}\n.card {\n    border: solid var(--hover) 1px;\n    padding: 1vw;\n    background-color: #93cdda;\n}\n.card:nth-child(2n + 1) {\n    background-color: var(--shadow);\n}\n.card div {\n    display: flex;\n    justify-content: space-between;\n}\n.card div:nth-child(4) {\n    justify-content: space-evenly;\n}\n.title {\n    font-weight: bolder;\n    padding-bottom: 2vh;\n}\n.project {\n    padding-bottom: 3vw;\n}\n.high {\n    border-right: 3vh solid #ff595e;\n    border-radius: 10px;\n}\n.medium {\n    border-right: 3vh solid #fcf6bd;\n    border-radius: 10px;\n}\n.low {\n    border-right: 3vh solid #52b788;\n    border-radius: 10px;\n}\n.card div button:hover {\n    background-color: var(--hover);\n    color: red;\n}\n.btnCard {\n    border: none;\n    padding: 0;\n    font-size: 4vw;\n    background: transparent;\n    cursor: pointer;\n    color: #cd4932;\n    width: 5vw;\n}\n.btnElement {\n    border: none;\n    background: transparent;\n}\n.strike {\n    text-decoration-line: line-through;\n    color: green;\n    font-weight: lighter;\n}\n#formAdd {\n    padding: 2vw;\n    background-color: aliceblue;\n    border: double 2vw pink;\n    width: 90vw;\n    position: fixed;\n    bottom: 20vh;\n    left: 7vw;\n}\n.btnNav {\n    width: 35%;\n    color: whitesmoke;\n    font-size: 3vh;\n}\n.btnForm {\n    background-color: var(--btnBGC);\n    width: 50%;\n    color: whitesmoke;\n    font-size: 3vh;\n}\n.btnNav:hover,\n.btnForm:hover {\n    background-color: var(--hover);\n}\n\n.close {\n    float: right;\n    transform: translateX(30%);\n    /* takes it outside the form */\n    border: 1px solid gray;\n    border-radius: 50%;\n    /* creates circle */\n    padding: 0.6em;\n    background: black;\n    color: white;\n    text-decoration: none;\n}\n.wide {\n    width: 100%;\n    padding: 1vw;\n    display: block;\n}\nfooter {\n    position: fixed;\n    bottom: 0;\n    width: 100vw;\n    height: auto;\n}\nul {\n    list-style: none;\n    background-color: #a5dbe6;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n}\nli {\n    /* padding: 2vw; */\n    /* font-size: 9vw; */\n    text-align: center;\n}\nli:hover {\n    background-color: #cd4932;\n}\n#sortDiv,\n#projectListDiv {\n    background-color: rgb(110, 141, 182);\n    padding: 3vw;\n}\n#sortDiv a {\n    display: flex;\n    justify-content: right;\n    color: rgb(117, 0, 128);\n    text-align: center;\n    cursor: pointer;\n    padding-right: 10vw;\n}\n\n.hidden {\n    display: none;\n}\n@media only screen and (min-width: 600px) {\n    html {\n        font-size: 2vw;\n    }\n    #content {\n        grid-template-columns: 1fr 10fr;\n        grid-template-areas:\n            'header header'\n            'footer main';\n    }\n    #header {\n        display: grid;\n        grid-area: header;\n    }\n    #main {\n        display: grid;\n        grid-area: main;\n        /* margin-bottom: 0; */\n    }\n    #formAdd {\n        width: 50vw;\n        left: 30vw;\n    }\n    .btnCard {\n        font-size: 3vw;\n    }\n    footer {\n        position: relative;\n        display: grid;\n        grid-area: footer;\n        width: 12.5vw;\n        margin: 0;\n        padding: 0;\n    }\n    ul {\n        display: flex;\n        flex-direction: column;\n    }\n    li {\n        /* font-size: 12vw; */\n        padding: 2vw;\n    }\n    .btnNav {\n        width: 8vw;\n    }\n    #sortDiv {\n        position: absolute;\n        display: block;\n    }\n    #sortDiv a {\n        position: relative;\n        left: 5vw;\n        padding-right: 3vw;\n    }\n}\n@media only screen and (min-width: 1025px) {\n    html {\n        display: flex;\n        justify-content: center;\n    }\n    #content {\n        width: 70vw;\n    }\n    .btnCard {\n        font-size: 2vw;\n    }\n    .card {\n        margin: 1vw;\n    }\n    footer {\n        height: 4vw;\n    }\n}\n","",{version:3,sources:["webpack://./dist/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,eAAe;IACf,qBAAqB;IACrB,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI,gDAAgD;IAChD,eAAe;IACf,YAAY;IACZ;;;;;;;;SAQK;IACL,+BAA+B;AACnC;;AAEA;IACI,UAAU;IACV,iBAAiB;IACjB,aAAa;IACb,iCAAiC;IACjC,yBAAyB;AAC7B;;AAEA;IACI,oBAAoB;IACpB,6BAA6B;IAC7B,kBAAkB;IAClB,cAAc;AAClB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;AACA;IACI,8BAA8B;IAC9B,YAAY;IACZ,yBAAyB;AAC7B;AACA;IACI,+BAA+B;AACnC;AACA;IACI,aAAa;IACb,8BAA8B;AAClC;AACA;IACI,6BAA6B;AACjC;AACA;IACI,mBAAmB;IACnB,mBAAmB;AACvB;AACA;IACI,mBAAmB;AACvB;AACA;IACI,+BAA+B;IAC/B,mBAAmB;AACvB;AACA;IACI,+BAA+B;IAC/B,mBAAmB;AACvB;AACA;IACI,+BAA+B;IAC/B,mBAAmB;AACvB;AACA;IACI,8BAA8B;IAC9B,UAAU;AACd;AACA;IACI,YAAY;IACZ,UAAU;IACV,cAAc;IACd,uBAAuB;IACvB,eAAe;IACf,cAAc;IACd,UAAU;AACd;AACA;IACI,YAAY;IACZ,uBAAuB;AAC3B;AACA;IACI,kCAAkC;IAClC,YAAY;IACZ,oBAAoB;AACxB;AACA;IACI,YAAY;IACZ,2BAA2B;IAC3B,uBAAuB;IACvB,WAAW;IACX,eAAe;IACf,YAAY;IACZ,SAAS;AACb;AACA;IACI,UAAU;IACV,iBAAiB;IACjB,cAAc;AAClB;AACA;IACI,+BAA+B;IAC/B,UAAU;IACV,iBAAiB;IACjB,cAAc;AAClB;AACA;;IAEI,8BAA8B;AAClC;;AAEA;IACI,YAAY;IACZ,0BAA0B;IAC1B,8BAA8B;IAC9B,sBAAsB;IACtB,kBAAkB;IAClB,mBAAmB;IACnB,cAAc;IACd,iBAAiB;IACjB,YAAY;IACZ,qBAAqB;AACzB;AACA;IACI,WAAW;IACX,YAAY;IACZ,cAAc;AAClB;AACA;IACI,eAAe;IACf,SAAS;IACT,YAAY;IACZ,YAAY;AAChB;AACA;IACI,gBAAgB;IAChB,yBAAyB;IACzB,aAAa;IACb,mBAAmB;IACnB,6BAA6B;AACjC;AACA;IACI,kBAAkB;IAClB,oBAAoB;IACpB,kBAAkB;AACtB;AACA;IACI,yBAAyB;AAC7B;AACA;;IAEI,oCAAoC;IACpC,YAAY;AAChB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,kBAAkB;IAClB,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,aAAa;AACjB;AACA;IACI;QACI,cAAc;IAClB;IACA;QACI,+BAA+B;QAC/B;;yBAEiB;IACrB;IACA;QACI,aAAa;QACb,iBAAiB;IACrB;IACA;QACI,aAAa;QACb,eAAe;QACf,sBAAsB;IAC1B;IACA;QACI,WAAW;QACX,UAAU;IACd;IACA;QACI,cAAc;IAClB;IACA;QACI,kBAAkB;QAClB,aAAa;QACb,iBAAiB;QACjB,aAAa;QACb,SAAS;QACT,UAAU;IACd;IACA;QACI,aAAa;QACb,sBAAsB;IAC1B;IACA;QACI,qBAAqB;QACrB,YAAY;IAChB;IACA;QACI,UAAU;IACd;IACA;QACI,kBAAkB;QAClB,cAAc;IAClB;IACA;QACI,kBAAkB;QAClB,SAAS;QACT,kBAAkB;IACtB;AACJ;AACA;IACI;QACI,aAAa;QACb,uBAAuB;IAC3B;IACA;QACI,WAAW;IACf;IACA;QACI,cAAc;IAClB;IACA;QACI,WAAW;IACf;IACA;QACI,WAAW;IACf;AACJ",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\n:root {\n    --hover: #b0438a;\n    --shadow: #5ca3b4;\n    --form: #005f73;\n    --formBorder: #001219;\n    --button: #eee8aa;\n    --btnBGC: #24a0ed;\n}\n\nhtml {\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    font-size: 14px;\n    opacity: 0.9;\n    background-image: radial-gradient(circle at center center, #3755b8, #4fc8c8),\n        repeating-radial-gradient(\n            circle at center center,\n            #3755b8,\n            #3755b8,\n            8px,\n            transparent 16px,\n            transparent 8px\n        );\n    background-blend-mode: multiply;\n}\n\n#content {\n    padding: 0;\n    min-height: 100vh;\n    display: grid;\n    grid-template-rows: auto 1fr auto;\n    background-color: #a5dbe6;\n}\n\n#header {\n    color: var(--button);\n    background-color: var(--form);\n    text-align: center;\n    padding: 3vh 0;\n}\n#main {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10vh;\n}\n.card {\n    border: solid var(--hover) 1px;\n    padding: 1vw;\n    background-color: #93cdda;\n}\n.card:nth-child(2n + 1) {\n    background-color: var(--shadow);\n}\n.card div {\n    display: flex;\n    justify-content: space-between;\n}\n.card div:nth-child(4) {\n    justify-content: space-evenly;\n}\n.title {\n    font-weight: bolder;\n    padding-bottom: 2vh;\n}\n.project {\n    padding-bottom: 3vw;\n}\n.high {\n    border-right: 3vh solid #ff595e;\n    border-radius: 10px;\n}\n.medium {\n    border-right: 3vh solid #fcf6bd;\n    border-radius: 10px;\n}\n.low {\n    border-right: 3vh solid #52b788;\n    border-radius: 10px;\n}\n.card div button:hover {\n    background-color: var(--hover);\n    color: red;\n}\n.btnCard {\n    border: none;\n    padding: 0;\n    font-size: 4vw;\n    background: transparent;\n    cursor: pointer;\n    color: #cd4932;\n    width: 5vw;\n}\n.btnElement {\n    border: none;\n    background: transparent;\n}\n.strike {\n    text-decoration-line: line-through;\n    color: green;\n    font-weight: lighter;\n}\n#formAdd {\n    padding: 2vw;\n    background-color: aliceblue;\n    border: double 2vw pink;\n    width: 90vw;\n    position: fixed;\n    bottom: 20vh;\n    left: 7vw;\n}\n.btnNav {\n    width: 35%;\n    color: whitesmoke;\n    font-size: 3vh;\n}\n.btnForm {\n    background-color: var(--btnBGC);\n    width: 50%;\n    color: whitesmoke;\n    font-size: 3vh;\n}\n.btnNav:hover,\n.btnForm:hover {\n    background-color: var(--hover);\n}\n\n.close {\n    float: right;\n    transform: translateX(30%);\n    /* takes it outside the form */\n    border: 1px solid gray;\n    border-radius: 50%;\n    /* creates circle */\n    padding: 0.6em;\n    background: black;\n    color: white;\n    text-decoration: none;\n}\n.wide {\n    width: 100%;\n    padding: 1vw;\n    display: block;\n}\nfooter {\n    position: fixed;\n    bottom: 0;\n    width: 100vw;\n    height: auto;\n}\nul {\n    list-style: none;\n    background-color: #a5dbe6;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n}\nli {\n    /* padding: 2vw; */\n    /* font-size: 9vw; */\n    text-align: center;\n}\nli:hover {\n    background-color: #cd4932;\n}\n#sortDiv,\n#projectListDiv {\n    background-color: rgb(110, 141, 182);\n    padding: 3vw;\n}\n#sortDiv a {\n    display: flex;\n    justify-content: right;\n    color: rgb(117, 0, 128);\n    text-align: center;\n    cursor: pointer;\n    padding-right: 10vw;\n}\n\n.hidden {\n    display: none;\n}\n@media only screen and (min-width: 600px) {\n    html {\n        font-size: 2vw;\n    }\n    #content {\n        grid-template-columns: 1fr 10fr;\n        grid-template-areas:\n            'header header'\n            'footer main';\n    }\n    #header {\n        display: grid;\n        grid-area: header;\n    }\n    #main {\n        display: grid;\n        grid-area: main;\n        /* margin-bottom: 0; */\n    }\n    #formAdd {\n        width: 50vw;\n        left: 30vw;\n    }\n    .btnCard {\n        font-size: 3vw;\n    }\n    footer {\n        position: relative;\n        display: grid;\n        grid-area: footer;\n        width: 12.5vw;\n        margin: 0;\n        padding: 0;\n    }\n    ul {\n        display: flex;\n        flex-direction: column;\n    }\n    li {\n        /* font-size: 12vw; */\n        padding: 2vw;\n    }\n    .btnNav {\n        width: 8vw;\n    }\n    #sortDiv {\n        position: absolute;\n        display: block;\n    }\n    #sortDiv a {\n        position: relative;\n        left: 5vw;\n        padding-right: 3vw;\n    }\n}\n@media only screen and (min-width: 1025px) {\n    html {\n        display: flex;\n        justify-content: center;\n    }\n    #content {\n        width: 70vw;\n    }\n    .btnCard {\n        font-size: 2vw;\n    }\n    .card {\n        margin: 1vw;\n    }\n    footer {\n        height: 4vw;\n    }\n}\n"],sourceRoot:""}]);const d=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,i,r){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);o&&a[A[0]]||(void 0!==r&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=r),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),i&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=i):A[4]="".concat(i)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},a=[],d=0;d<n.length;d++){var c=n[d],l=o.base?c[0]+o.base:c[0],A=r[l]||0,s="".concat(l," ").concat(A);r[l]=A+1;var p=t(s),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=i(m,o);o.byIndex=d,e.splice(d,0,{identifier:s,updater:u,references:1})}a.push(s)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var r=o(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<r.length;a++){var d=t(r[a]);e[d].references--}for(var c=o(n,i),l=0;l<r.length;l++){var A=t(r[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}r=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,i&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{function n(n,e,t,o,i,r){return{title:n,description:e,priority:t,project:o,deadline:i,completed:r}}function e(e){const t=JSON.parse(window.localStorage.getItem("ToDoList")),o=document.getElementById("title").value.toUpperCase();if(""===o)return void alert("PLEASE ENTER A TASK TITLE");if(t.some((n=>n.title===o))&&"number"!=typeof e||t.some((n=>n.title===o))&&"number"==typeof e&&o!==t[e].title)return void alert(`"${o}": CHANGE TASK TITLE TO AVOID DUPLICATES`);const i=document.getElementById("description").value;let r=document.getElementById("priorityLevel").value;switch(r){case"High":r=3;break;case"Medium":r=2;break;case"Low":r=1}const a=document.getElementById("project").value,d=document.getElementById("deadline").value;!function(n,e){const t=JSON.parse(window.localStorage.getItem("ToDoList"));"number"==typeof e?t.splice(e,1,n):t.push(n),localStorage.setItem("ToDoList",JSON.stringify(t))}(n(o,i,r,a,d,!1),e)}function o(n){n.preventDefault();const e=document.querySelectorAll(".wide");let t=0;for(t=0;t<=e.length-1;t++)e[t].value=""}const i=function(n){const t=document.createElement("form");t.id="formAdd";const i=document.createElement("a");i.innerHTML='<a class="close" href="javascript:window.location.reload()">&#10060</a>',t.appendChild(i);const r=document.createElement("fieldset"),a=document.createElement("legend");a.innerHTML=n?"<b>EDIT FIELDS AS REQUIRED</b>":"<b>ENTER NEW TASK INFORMATION</b>";const d=document.createElement("br"),c=document.createElement("input");c.setAttribute("type","date"),c.setAttribute("name","Task"),c.classList.add("wide"),c.id="deadline";const l=["title","description"];let A=0;for(A=0;A<=l.length-1;A++){const n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("name","Task"),n.setAttribute("placeholder",l[A]),n.classList.add("wide"),n.id=l[A],r.appendChild(n),r.appendChild(d.cloneNode())}r.appendChild(c),r.appendChild(d.cloneNode());const s=document.createElement("p");s.id="priority";const p=document.createElement("label");p.innerHTML="Choose your priority: ",p.htmlFor="priority";const m=["Low","Medium","High"],u=document.createElement("select");u.name="priority",u.id="priorityLevel",u.classList.add("wide");let C=0;for(C=0;C<=m.length-1;C++){const n=document.createElement("option");n.value=m[C],n.text=m[C],u.appendChild(n)}s.appendChild(p).appendChild(u),r.appendChild(s),r.appendChild(d.cloneNode());const g=document.createElement("input");g.setAttribute("list","projects"),g.setAttribute("name","project"),g.id="project",g.classList.add("wide");const h=document.createElement("label");h.innerHTML="Choose/ Enter Project name: ",h.htmlFor="project",r.appendChild(h);const v=JSON.parse(window.localStorage.getItem("ToDoList")),I=[...new Set(v.map((n=>n.project)))],b=document.createElement("datalist");b.id="projects",b.classList.add("wide");for(let n=0;n<=I.length-1;n++){const e=document.createElement("option");e.value=I[n],e.text=I[n],b.appendChild(e)}g.appendChild(b),r.appendChild(g),r.appendChild(d.cloneNode());const f=document.createElement("button");f.setAttribute("type","reset"),f.classList.add("btnForm"),f.innerText="CLEAR",r.appendChild(f),f.addEventListener("click",o);const B=document.createElement("button");B.setAttribute("type","submit"),B.innerText="SAVE",B.classList.add("btnForm"),n>=0?B.addEventListener("click",(()=>{e(n)}),!1):B.addEventListener("click",e),r.appendChild(a),r.appendChild(B),t.appendChild(r),document.body.appendChild(t);const w=document.getElementById("title");w.focus(),w.select(),w.setAttribute("required","")};function r(n){const e=n.target.id,t=JSON.parse(window.localStorage.getItem("ToDoList"));e.includes("Date")?t.sort(((n,e)=>n.deadline>e.deadline?1:-1)):e.includes("Title")?t.sort(((n,e)=>n.title<e.title?1:-1)):e.includes("Project")?t.sort(((n,e)=>n.project<e.project?1:-1)):e.includes("Priority")?t.sort(((n,e)=>n.priority>e.priority?1:-1)):e.includes("Done")&&t.sort(((n,e)=>n.completed>e.completed?1:-1)),localStorage.setItem("ToDoList",JSON.stringify(t)),window.location.reload()}const a=function(n){const e=n.target.parentElement.parentElement.previousElementSibling,t=n.target.parentElement.parentElement.previousElementSibling.previousElementSibling,o=n.target.parentElement;this.dataset.clicked?(o.innerHTML="<img src = 'images/detail.png' class = 'btnCard detail'>",this.removeAttribute("data-clicked"),e.style.display="none",t.style.display="none"):(o.innerHTML="<img src = 'images/slim.png' class = 'btnCard slim'>",this.setAttribute("data-clicked","true"),e.style.display="block",t.style.display="block")},d=function(n){const e=n.target.parentElement.parentElement.parentElement.childNodes[0].childNodes[0].firstChild.data,t=JSON.parse(window.localStorage.getItem("ToDoList")),o=t.findIndex((n=>n.title===e));t.length<=1?(alert("This is the last task - DO NOT TRY TO DELETE"),window.location.reload()):confirm("The deletion will be final: PROCEED?")?(t.splice(o,1),localStorage.setItem("ToDoList",JSON.stringify(t)),window.location.reload()):window.location.reload()},c=JSON.parse(window.localStorage.getItem("ToDoList")),l=function(n){const e=n.target.parentElement.parentElement.parentElement.childNodes[0].childNodes[0].firstChild.data,t=c.findIndex((n=>n.title===e));!1===c[t].completed?c[t].completed=!0:c[t].completed=!1,localStorage.setItem("ToDoList",JSON.stringify(c)),window.location.reload()},A=function(n){const e=document.getElementById("projectListDiv");e&&(e.innerHTML="");const t=document.getElementById("sortDiv");t&&(t.innerHTML="");const o=JSON.parse(window.localStorage.getItem("ToDoList")),r=n.target.parentElement.parentElement.parentElement.childNodes[0].childNodes[0].firstChild.data,a=o.findIndex((n=>n.title===r));i(a),document.getElementById("title").value=o[a].title,document.getElementById("description").value=o[a].description,document.getElementById("project").value=o[a].project,document.getElementById("deadline").value=o[a].deadline;let d="";switch(o[a].priority){case 3:d="High";break;case 2:d="Medium";break;case 1:d="Low"}document.getElementById("priorityLevel").value=d},s=document.getElementById("content");function p(n,e){let t=n.length;for(t=n.length-1;t>=0;t--){const o=document.createElement("card");o.classList.add("card");const i=document.createElement("div");o.appendChild(i);const r=document.createElement("div");o.appendChild(r);const c=document.createElement("div");o.appendChild(c);const s=document.createElement("div");o.appendChild(s);const p=document.createElement("p");p.classList.add("title"),p.innerHTML=n[t].title,i.appendChild(p);const m=document.createElement("deadline");m.classList.add("deadline"),m.innerHTML=`<b>Due</b>: ${n[t].deadline}`,i.appendChild(m);const u=document.createElement("project");u.classList.add("project"),u.innerHTML=`<b>Project</b>: ${n[t].project}`,r.appendChild(u);const C=document.createElement("description");C.classList.add("description"),C.innerHTML=`<i>${n[t].description}</i>`,c.appendChild(C);const g=document.createElement("button");g.classList.add("btnElement"),g.addEventListener("click",l),!0===n[t].completed?g.innerHTML="<img src = 'images/check.png' class = 'btnCard done'>":g.innerHTML="<img src = 'images/pending.png' class = 'btnCard done'>",s.appendChild(g);const h=document.createElement("button");h.addEventListener("click",a),h.classList.add("btnElement"),h.innerHTML="<img src = 'images/detail.png' class = 'btnCard detail'>",s.appendChild(h);const v=document.createElement("button");v.addEventListener("click",A),v.classList.add("btnElement"),v.innerHTML="<img src = 'images/edit.png' class = 'btnCard edit'>",s.appendChild(v);const I=document.createElement("button");I.addEventListener("click",d),I.classList.add("btnElement"),I.innerHTML="<img src = 'images/delete.png' class = 'btnCard delete'>",s.appendChild(I),3===n[t].priority&&o.classList.add("high"),2===n[t].priority&&o.classList.add("medium"),1===n[t].priority&&o.classList.add("low"),!0===n[t].completed&&(o.style.borderRight="none",o.classList.add("strike")),r.style.display="none",c.style.display="none",e.appendChild(o)}}function m(n){const e=JSON.parse(window.localStorage.getItem("ToDoList")).filter((e=>e.project===n.target.innerHTML)),t=document.getElementById("main");t.innerHTML="",p(e,t)}function u(n){if(this.removeEventListener("click",u),n.target.className.includes("plus")){const n=document.getElementById("projectListDiv");n&&(n.innerHTML="");const e=document.getElementById("sortDiv");e&&(e.innerHTML=""),i()}else n.target.className.includes("sort")?function(){const n=document.getElementById("projectListDiv");n&&(n.innerHTML="");const e=document.getElementById("navbar"),t=document.createElement("br"),o=document.createElement("div");o.id="sortDiv";const i=["Title","Date","Project","Priority","Done"];let a=0;for(a=0;a<=i.length-1;a++){const n=document.createElement("a");n.id=`sort${i[a]}`,n.innerHTML=`<b>Sort:</b> ${i[a]}`,n.addEventListener("click",r),o.appendChild(n),o.appendChild(t.cloneNode()),o.appendChild(t.cloneNode())}e.appendChild(o)}():n.target.className.includes("home")?window.location.reload():n.target.className.includes("project")&&function(){const n=document.getElementById("sortDiv");n&&(n.innerHTML="");const e=document.getElementById("navbar"),t=document.createElement("div");t.id="projectListDiv";const o=document.createElement("br"),i=JSON.parse(window.localStorage.getItem("ToDoList")),r=[...new Set(i.map((n=>n.project)))];let a=0;for(a=0;a<=r.length-1;a++){const n=document.createElement("a");n.innerHTML=`${r[a]}`,t.appendChild(n),t.appendChild(o.cloneNode()),t.appendChild(o.cloneNode()),n.addEventListener("click",m)}e.appendChild(t)}()}var C=t(379),g=t.n(C),h=t(795),v=t.n(h),I=t(569),b=t.n(I),f=t(565),B=t.n(f),w=t(216),y=t.n(w),E=t(589),L=t.n(E),k=t(341),T={};T.styleTagTransform=L(),T.setAttributes=B(),T.insert=b().bind(null,"head"),T.domAPI=v(),T.insertStyleElement=y(),g()(k.Z,T),k.Z&&k.Z.locals&&k.Z.locals,function(){const e=localStorage.getItem("ToDoList");if(null===e||e.length<3){alert("\n\nLocal Storage is either empty or does not exist. \n \nCreating 'local-storage' list array with a sample task");const e=n("BUY MILK","From here, we can easily conclude that it’s best to go for three sizes: desktop, tablet, and phone.","High","Groceries",new Date,!1),t=[];t.push(e),localStorage.setItem("ToDoList",JSON.stringify(t))}!function(){const n=document.createElement("div");n.id="header";const e=document.createElement("h1");e.innerHTML="THINGS TO DO",n.appendChild(e),s.appendChild(n)}(),function(){const n=document.createElement("div");n.id="main",s.appendChild(n),p(JSON.parse(window.localStorage.getItem("ToDoList")),n)}(),function(){const n=document.createElement("footer"),e=document.createElement("navbar");e.id="navbar";const t=["<img src = 'images/home.png'  class = 'home btnNav'>","<img src = 'images/plus.png'  class = 'plus btnNav'>","<img src = 'images/project.png'  class = 'projectList btnNav'>","<img src = 'images/sort.png'  class = 'sort btnNav'>"],o=document.createElement("ul");let i=0;for(i=0;i<=t.length-1;i++){const n=document.createElement("li");n.innerHTML=`${t[i]}`,n.classList.add("menuItem"),o.appendChild(n)}e.appendChild(o),n.appendChild(e),s.appendChild(n)}(),function(){const n=document.getElementsByClassName("menuItem");let e=0;for(e=0;e<=n.length-1;e++)n[e].addEventListener("click",u)}()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,